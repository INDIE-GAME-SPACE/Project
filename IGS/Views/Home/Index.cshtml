@model IGS.Domain.Entity.User
﻿
@{
    Layout = "_Layout";
    ViewData["Title"] = "Главная";
}

<head>
  <meta charset="utf-8">
  <title>Полосы прокрутки</title>
  <style>
   html { overflow-x: hidden; }
  </style>
 </head>
<div class="text-center dflex flex-row" style="">
    @{
        var data = ViewBag.Message;
        data.x = Math.Round(data.x, 1);
        data.y = Math.Round(data.y, 1);
        data.z = Math.Round(data.z, 1);

    }
    <script src="~/js/three.js"></script>
    <script>const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

        const renderer = new THREE.WebGLRenderer({ alpha: true });
        renderer.setClearColor(0x000000, 0);
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        const geometry = new THREE.BoxGeometry(@data.x, @data.y, @data.z);
        const material = new THREE.MeshBasicMaterial({ color: 0xAA20B2 });
        const cube = new THREE.Mesh(geometry, material);
        scene.add(cube);

        const edges = new THREE.EdgesGeometry(geometry);
        const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0x000000 }));
        scene.add(line);

        camera.position.z = 3;
        camera.position.y = 0;


        function animate() {
            requestAnimationFrame(animate);
            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
            line.rotation.x += 0.01;
            line.rotation.y += 0.01;
            renderer.render(scene, camera);
        }
        animate();</script>
</div>